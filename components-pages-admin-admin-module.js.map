{"version":3,"sources":["./src/app/components/pages/admin/admin.module.ts","./src/app/components/pages/admin/types/types.component.ts","./src/app/components/pages/admin/types/types.component.html","./src/app/components/pages/admin/products/products.component.ts","./src/app/components/pages/admin/products/products.component.html","./src/app/components/pages/admin/form-product/form-product.component.ts","./src/app/components/pages/admin/form-product/form-product.component.html"],"names":[],"mappings":"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","file":"components-pages-admin-admin-module.js","sourcesContent":["import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgModule, Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormProductComponent } from './form-product/form-product.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { TypesComponent } from './types/types.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"formProduct\", component: FormProductComponent\r\n  },\r\n  {\r\n    path:\"products\", component: ProductsComponent\r\n  },\r\n  {\r\n    path:\"types\", component: TypesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FormProductComponent,\r\n    ProductsComponent,\r\n    TypesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgbModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { FormControl, Validators } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-types',\n  templateUrl: './types.component.html',\n  styleUrls: ['./types.component.css']\n})\nexport class TypesComponent implements OnInit {\n\n  public titleFormType: string;\n  public nameType: FormControl;\n\n  constructor(private ngbModal: NgbModal) { }\n\n  ngOnInit(): void {\n  }\n\n  public openFormType(content: any, typeData: any): void {\n    this.titleFormType = typeData ? \"Editar tipo\" : \"Crear tipo\";\n    this.nameType = new FormControl(\"\", [Validators.required, Validators.maxLength(20)]);\n    this.ngbModal.open(content, {size: \"lg\"});\n  }\n\n}\n","<div class=\"container\">\n  <a routerLink=\"/admin/products\" class=\"btn btn-outline-success\"\n    ><i class=\"fa-solid fa-arrow-left\"></i> Regresar</a\n  >\n  <div class=\"row mt-3\">\n    <div class=\"col-12\">\n      <div class=\"card card-body\">\n        <h3><i class=\"fa-solid fa-filter\"></i> Filtros</h3>\n        <div class=\"row mt-3\">\n          <div class=\"col-12 col-md-6\">\n            <div class=\"input-group\">\n              <input\n                type=\"search\"\n                class=\"form-control\"\n                placeholder=\"Buscar por nombre\"\n              />\n              <div class=\"input-group-append\">\n                <button type=\"button\" class=\"btn btn-outline-success\">\n                  <i class=\"fa-solid fa-magnifying-glass\"></i>\n                </button>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-success mt-3\"\n              (click)=\"openFormType(formTypeMD, null)\"\n            >\n              <i class=\"fa-solid fa-plus\"></i> Crear tipo\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"card card-body mt-3\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped table-hover\">\n            <thead>\n              <tr>\n                <th>Nombre</th>\n                <th>Opciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Tornilleria</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-success rounded-circle\"\n                    (click)=\"openFormType(formTypeMD, 1)\"\n                  >\n                    <i class=\"fa-solid fa-pencil\"></i>\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #formTypeMD let-modal>\n  <div class=\"modal-body\">\n    <button type=\"button\" class=\"close\" (click)=\"modal.close()\">\n      <i class=\"fa-solid fa-circle-xmark text-danger\"></i>\n    </button>\n    <h3><i class=\"fa-solid fa-dolly\"></i> {{ titleFormType }}</h3>\n    <div class=\"row mt-4\">\n      <div class=\"col-12 col-md-6\">\n        <img src=\"assets/ilustrations/save.svg\" class=\"img-fluid\" alt=\"\">\n      </div>\n      <div class=\"col-12 col-md-6\">\n        <label for=\"name\">Nombre</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          [formControl]=\"nameType\"\n          class=\"form-control\"\n          placeholder=\"Nombre\"\n          [ngClass]=\"{\n            'is-valid': nameType.valid,\n            'is-invalid': nameType.invalid\n          }\"\n        />\n        <button type=\"button\" [disabled]=\"nameType.invalid\" class=\"btn btn-outline-success btn-block mt-3\"><i class=\"fa-solid fa-floppy-disk\"></i> Guardar</button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  public page: number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.page = 1;\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card card-body\">\n        <h3><i class=\"fa-solid fa-filter\"></i> Filtros</h3>\n        <div class=\"row mt-3\">\n          <div class=\"col-12 col-md-6\">\n            <div class=\"input-group\">\n              <input\n                type=\"search\"\n                class=\"form-control\"\n                placeholder=\"Buscar por nombre o referencia\"\n              />\n              <div class=\"input-group-append\">\n                <button type=\"button\" class=\"btn btn-outline-success\">\n                  <i class=\"fa-solid fa-magnifying-glass\"></i>\n                </button>\n              </div>\n            </div>\n            <div class=\"btn-group mt-3\">\n              <a\n                routerLink=\"/admin/formProduct\"\n                class=\"btn btn-outline-success\"\n                ><i class=\"fa-solid fa-plus\"></i> Crear producto</a\n              >\n              <a routerLink=\"/admin/types\" class=\"btn btn-outline-primary\"\n                ><i class=\"fa-solid fa-plus\"></i> Crear tipo</a\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"card card-body mt-3\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped table-hover\">\n            <thead>\n              <tr>\n                <th>Imagen</th>\n                <th>No referencia</th>\n                <th>Nombre</th>\n                <th>Descripcion</th>\n                <th>Precio</th>\n                <th>Opciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <img\n                    src=\"https://img.freepik.com/foto-gratis/tornillos-nueses_144627-17689.jpg?w=2000\"\n                    width=\"100\"\n                    height=\"100\"\n                    alt=\"\"\n                  />\n                </td>\n                <td>1</td>\n                <td>Cable</td>\n                <td>\n                  <textarea\n                    class=\"form-control\"\n                    [disabled]=\"true\"\n                    cols=\"5\"\n                    rows=\"3\"\n                  >\nPrueba</textarea\n                  >\n                </td>\n                <td>$ 123.000</td>\n                <td>\n                  <a\n                    routerLink=\"/admin/formProduct\"\n                    class=\"btn btn-outline-primary rounded-circle\"\n                    title=\"Editar producto\"\n                  >\n                    <i class=\"fa-solid fa-pencil\"></i>\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <ngb-pagination\n          [collectionSize]=\"70\"\n          size=\"md\"\n          class=\"d-flex justify-content-center mt-3\"\n          [(page)]=\"page\"\n          aria-label=\"Default pagination\"\n        ></ngb-pagination>\n      </div>\n    </div>\n  </div>\n</div>\n","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-form-product',\r\n  templateUrl: './form-product.component.html',\r\n  styleUrls: ['./form-product.component.css']\r\n})\r\nexport class FormProductComponent implements OnInit {\r\n\r\n  public title: string;\r\n  public formProduct: FormGroup;\r\n  public brands: string[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.brands = [];\r\n    this.formProduct = new FormGroup({\r\n      name: new FormControl(\"\", [Validators.required, Validators.maxLength(50)]),\r\n      description: new FormControl(\"\", [Validators.required, Validators.maxLength(200)]),\r\n      units: new FormControl(null, [Validators.required, Validators.max(999999999)]),\r\n      code: new FormControl(\"\", Validators.required),\r\n      colour: new FormControl(\"\", Validators.required),\r\n      brand: new FormControl(\"\", [Validators.required, Validators.maxLength(50)])\r\n    });\r\n    this.title = \"Crear producto\";\r\n  }\r\n\r\n  public addBrand(): void {\r\n    this.brands.push(this.formProduct.get(\"brand\").value);\r\n    this.formProduct.get(\"brand\").reset();\r\n  }\r\n\r\n  public deleteBrand(brand: string): void {\r\n    for(let i: number = 0; i < this.brands.length; i ++) {\r\n      if(this.brands[i] === brand) {\r\n        this.brands.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <a routerLink=\"/admin/products\" class=\"btn btn-outline-success\"><i class=\"fa-solid fa-arrow-left\"></i> Regresar</a>\r\n  <div class=\"row align-items-center\">\r\n    <div class=\"col-12 col-md-6\">\r\n      <img src=\"assets/ilustrations/save.svg\" class=\"img-fluid\" alt=\"\">\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n      <div class=\"card card-body\">\r\n        <h3><i class=\"fa-solid fa-box\"></i> {{title}}</h3>\r\n        <form [formGroup]=\"formProduct\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <label for=\"image\">Seleccionar imagenes</label>\r\n            <input type=\"file\" class=\"form-control\" accept=\"image/*\" multiple id=\"image\">\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"code\">Codigo</label>\r\n            <input type=\"text\" formControlName=\"code\" [ngClass]=\"{'is-valid': formProduct.get('code').valid, 'is-invalid': formProduct.get('code').invalid}\" class=\"form-control\" placeholder=\"#\" id=\"code\">\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('code').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa un codigo!</p>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"name\">Nombre</label>\r\n            <input type=\"text\" formControlName=\"name\" [ngClass]=\"{'is-valid': formProduct.get('name').valid, 'is-invalid': formProduct.get('name').invalid}\" class=\"form-control\" placeholder=\"Nombre\" id=\"name\">\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('name').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa un nombre!</p>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('name').hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 50 caracteres!</p>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"description\">Descripción</label>\r\n            <textarea id=\"description\" [ngClass]=\"{'is-valid': formProduct.get('description').valid, 'is-invalid': formProduct.get('description').invalid}\" formControlName=\"description\" cols=\"5\" rows=\"3\" class=\"form-control\" placeholder=\"Descripción\"></textarea>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('description').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa una descripción!</p>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('description').hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 200 caracteres!</p>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"colour\">Color</label>\r\n            <input type=\"color\" class=\"form-control\" [ngClass]=\"{'is-valid': formProduct.get('colour').valid, 'is-invalid': formProduct.get('colour').invalid}\" formControlName=\"colour\" id=\"colour\">\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('colour').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Selecciona un color!</p>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"units\">Unidades</label>\r\n            <input type=\"number\" id=\"units\" [ngClass]=\"{'is-valid': formProduct.get('units').valid, 'is-invalid': formProduct.get('units').invalid}\" formControlName=\"units\" placeholder=\"Unidades\" class=\"form-control\">\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('units').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa una unidad!</p>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('units').hasError('max')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 9 numeros!</p>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"brands\">Marcas</label>\r\n            <div class=\"input-group\">\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"brand\" [ngClass]=\"{'is-valid': formProduct.get('brand').valid, 'is-invalid': formProduct.get('brand').invalid && brands.length <= 0}\" id=\"brands\" placeholder=\"Marcas\">\r\n              <div class=\"input-group-append\">\r\n                <button type=\"button\" [disabled]=\"formProduct.get('brand').invalid\" (click)=\"addBrand()\" class=\"btn btn-outline-success\"><i class=\"fa-solid fa-floppy-disk\"></i></button>\r\n              </div>\r\n            </div>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('brand').hasError('required') && brands.length <= 0\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa una marca!</p>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('brand').hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 50 caracteres!</p>\r\n            <span class=\"badge badge-primary mr-1\" *ngFor=\"let brand of brands\">{{brand}} <a (click)=\"deleteBrand(brand)\" class=\"text-danger\"><i class=\"fa-solid fa-xmark\"></i></a></span>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <button type=\"button\" [disabled]=\"formProduct.get('code').invalid || formProduct.get('name').invalid || \r\n            formProduct.get('description').invalid || formProduct.get('colour').invalid ||\r\n            formProduct.get('units').invalid || brands.length <= 0\" class=\"btn btn-outline-success mt-3\"><i class=\"fa-solid fa-floppy-disk\"></i> Guardar</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}