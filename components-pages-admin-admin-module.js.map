{"version":3,"sources":["./src/app/components/pages/admin/admin.module.ts","./src/app/components/pages/admin/types/types.component.ts","./src/app/components/pages/admin/types/types.component.html","./src/app/services/product.service.ts","./src/app/components/pages/admin/products/products.component.ts","./src/app/components/pages/admin/products/products.component.html","./src/app/components/pages/admin/form-product/form-product.component.ts","./src/app/components/pages/admin/form-product/form-product.component.html","./src/app/objects/product.ts"],"names":[],"mappings":"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","file":"components-pages-admin-admin-module.js","sourcesContent":["import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgModule, Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormProductComponent } from './form-product/form-product.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { TypesComponent } from './types/types.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"formProduct/:type\", component: FormProductComponent\r\n  },\r\n  {\r\n    path:\"products\", component: ProductsComponent\r\n  },\r\n  {\r\n    path:\"types\", component: TypesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FormProductComponent,\r\n    ProductsComponent,\r\n    TypesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgbModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { FormControl, Validators } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-types',\r\n  templateUrl: './types.component.html',\r\n  styleUrls: ['./types.component.css']\r\n})\r\nexport class TypesComponent implements OnInit {\r\n\r\n  public titleFormType: string;\r\n  public nameType: FormControl;\r\n\r\n  constructor(private ngbModal: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public openFormType(content: any, typeData: any): void {\r\n    this.titleFormType = typeData ? \"Editar tipo\" : \"Crear tipo\";\r\n    this.nameType = new FormControl(\"\", [Validators.required, Validators.maxLength(20)]);\r\n    this.ngbModal.open(content, {size: \"lg\"});\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <a routerLink=\"/admin/products\" class=\"btn btn-outline-success\"\r\n    ><i class=\"fa-solid fa-arrow-left\"></i> Regresar</a\r\n  >\r\n  <div class=\"row mt-3\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card card-body\">\r\n        <h3><i class=\"fa-solid fa-filter\"></i> Filtros</h3>\r\n        <div class=\"row mt-3\">\r\n          <div class=\"col-12 col-md-6\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"search\"\r\n                class=\"form-control\"\r\n                placeholder=\"Buscar por nombre\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button type=\"button\" class=\"btn btn-outline-success\">\r\n                  <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-outline-success mt-3\"\r\n              (click)=\"openFormType(formTypeMD, null)\"\r\n            >\r\n              <i class=\"fa-solid fa-plus\"></i> Crear tipo\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <div class=\"card card-body mt-3\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-striped table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nombre</th>\r\n                <th>Opciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Tornilleria</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-success rounded-circle\"\r\n                    (click)=\"openFormType(formTypeMD, 1)\"\r\n                  >\r\n                    <i class=\"fa-solid fa-pencil\"></i>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #formTypeMD let-modal>\r\n  <div class=\"modal-body\">\r\n    <button type=\"button\" class=\"close\" (click)=\"modal.close()\">\r\n      <i class=\"fa-solid fa-circle-xmark text-danger\"></i>\r\n    </button>\r\n    <h3><i class=\"fa-solid fa-dolly\"></i> {{ titleFormType }}</h3>\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-12 col-md-6\">\r\n        <img src=\"assets/ilustrations/save.svg\" class=\"img-fluid\" alt=\"\">\r\n      </div>\r\n      <div class=\"col-12 col-md-6\">\r\n        <label for=\"name\">Nombre</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          [formControl]=\"nameType\"\r\n          class=\"form-control\"\r\n          placeholder=\"Nombre\"\r\n          [ngClass]=\"{\r\n            'is-valid': nameType.valid,\r\n            'is-invalid': nameType.invalid\r\n          }\"\r\n        />\r\n        <button type=\"button\" [disabled]=\"nameType.invalid\" class=\"btn btn-outline-success btn-block mt-3\"><i class=\"fa-solid fa-floppy-disk\"></i> Guardar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import { catchError } from 'rxjs/operators';\r\nimport { Product } from './../objects/product';\r\nimport { environment } from './../../environments/environment.prod';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  private endPointBase: string = environment.backEndPoint + \"/api/product\";\r\n  private endPointBaseType: string = environment.backEndPoint + \"/api/type\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public findById(productId: number): Observable<any>{\r\n    return this.http.get(this.endPointBase + \"/getById/\" + productId).pipe(\r\n      catchError(\r\n        error => {\r\n          return throwError(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  public getAllTypes(): Observable<any>{\r\n    return this.http.get(this.endPointBaseType + \"/getAll\").pipe(\r\n      catchError(\r\n        error => {\r\n          return throwError(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  public find(name: string, page: number, size: number): Observable<any>{\r\n    return this.http.get(this.endPointBase + \"/find/\" + name + \"/\" + page + \"/\" + size).pipe(\r\n      catchError(error => {\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  public create(product: Product): Observable<any>{\r\n    return this.http.post(this.endPointBase + \"/create\", product).pipe(\r\n      catchError(\r\n        error => {\r\n          return throwError(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n}\r\n","import { LoadingComponent } from './../../../loading/loading.component';\r\nimport { MessagesComponent } from './../../../messages/messages.component';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ProductService } from './../../../../services/product.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n\r\n  public pageable: {\r\n    page: number,\r\n    size: number,\r\n    totalElements: number,\r\n    totalPages: number\r\n  };\r\n  public products: any[];\r\n  public name: FormControl;\r\n  public isCleanSearch: boolean;\r\n\r\n  constructor(private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isCleanSearch = false;\r\n    this.initPageable();\r\n    this.name = new FormControl(\"\", Validators.maxLength(100));\r\n    this.findProduct(\"all\");\r\n  }\r\n\r\n  public pageChange(): void {\r\n    this.findProduct(\"all\");\r\n  }\r\n\r\n  public search(): void {\r\n    this.initPageable();\r\n    let name: string = this.name.value != \"\" ? this.name.value : \"all\";\r\n    this.isCleanSearch = this.name.value != \"\";\r\n    this.findProduct(name);\r\n  }\r\n\r\n  private initPageable(): void {\r\n    this.pageable = {\r\n      page: 1,\r\n      size: 10,\r\n      totalElements: 0,\r\n      totalPages: 0\r\n    };\r\n  }\r\n\r\n  public findProduct(name: string): void {\r\n    LoadingComponent.isActive = true;\r\n    this.productService.find(name, this.pageable.page, this.pageable.size).subscribe(\r\n      response => {\r\n        this.products = response.content;\r\n        this.pageable.totalElements = response.totalElements;\r\n        this.pageable.totalPages = response.totalPages;\r\n        LoadingComponent.isActive = false;\r\n      },\r\n      error => {\r\n        MessagesComponent.errorMessage(error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card card-body\">\r\n        <h3><i class=\"fa-solid fa-filter\"></i> Filtros</h3>\r\n        <div class=\"row mt-3\">\r\n          <div class=\"col-12 col-md-6\">\r\n            <div class=\"input-group\">\r\n              <input type=\"search\" [ngClass]=\"{'is-valid': name.valid, 'is-invalid': name.invalid}\" [formControl]=\"name\" class=\"form-control\" placeholder=\"Buscar por nombre o referencia\" />\r\n              <div class=\"input-group-append\">\r\n                <button type=\"button\" (click)=\"search()\" [disabled]=\"name.invalid\" class=\"btn btn-outline-success\">\r\n                  <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <p class=\"text-danger\" *ngIf=\"name.hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 100 caracteres!</p>\r\n            <a (click)=\"ngOnInit()\" *ngIf=\"isCleanSearch\" class=\"text-danger\"><i class=\"fa-solid fa-trash\"></i> Limpiar busqueda: {{name.value}}</a>\r\n            <div class=\"w-100\"></div>\r\n            <div class=\"btn-group mt-3\">\r\n              <a routerLink=\"/admin/formProduct/create\" class=\"btn btn-outline-success\"><i class=\"fa-solid fa-plus\"></i>\r\n                Crear producto</a>\r\n              <a routerLink=\"/admin/types\" class=\"btn btn-outline-primary\"><i class=\"fa-solid fa-plus\"></i> Crear\r\n                tipo</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <div class=\"card card-body mt-3\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-striped table-hover text-center\">\r\n            <thead>\r\n              <tr>\r\n                <th>No referencia</th>\r\n                <th>Nombre</th>\r\n                <th>Descripción</th>\r\n                <th>Cantidad</th>\r\n                <th>Opciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let product of products\">\r\n                <td>{{product.code}}</td>\r\n                <td>{{product.name}}</td>\r\n                <td>\r\n                  <textarea class=\"form-control\" [disabled]=\"true\" cols=\"1\" rows=\"2\">\r\n                    {{product.description}}</textarea>\r\n                </td>\r\n                <td>{{product.units + \" \" + product.unitType}}</td>\r\n                <td>\r\n                  <a [routerLink]=\"['/admin/formProduct/', 'update']\" [queryParams]=\"{productId: product.id}\" class=\"btn btn-outline-primary rounded-circle\"\r\n                    title=\"Editar producto\">\r\n                    <i class=\"fa-solid fa-pencil\"></i>\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <ngb-pagination [pageSize]=\"pageable.size\" (pageChange)=\"pageChange()\" [collectionSize]=\"pageable.totalElements\" size=\"md\" class=\"d-flex justify-content-center mt-3\" [(page)]=\"pageable.page\"\r\n          aria-label=\"Default pagination\"></ngb-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoadingComponent } from './../../../loading/loading.component';\r\nimport { MessagesComponent } from './../../../messages/messages.component';\r\nimport { ProductService } from './../../../../services/product.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport swal from 'sweetalert2';\r\nimport { Product } from 'src/app/objects/product';\r\n\r\ninterface genericData {\r\n  id: number,\r\n  name: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-form-product',\r\n  templateUrl: './form-product.component.html',\r\n  styleUrls: ['./form-product.component.css']\r\n})\r\nexport class FormProductComponent implements OnInit {\r\n\r\n  public title: string;\r\n  public formProduct: FormGroup;\r\n  public brands: genericData[];\r\n  public colours: genericData[];\r\n  public types: any[];\r\n  public typeForm: string;\r\n\r\n  constructor(private productService: ProductService, private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTypes();\r\n    this.typeForm = this.activatedRoute.snapshot.paramMap.get(\"type\");\r\n    if (this.typeForm === \"create\") {\r\n      this.title = \"Crear producto\";\r\n      this.colours = [];\r\n      this.brands = [];\r\n      this.formProduct = new FormGroup({\r\n        name: new FormControl(\"\", [Validators.required, Validators.maxLength(50)]),\r\n        description: new FormControl(\"\", [Validators.required, Validators.maxLength(200)]),\r\n        units: new FormControl(null, [Validators.required, Validators.max(999999999)]),\r\n        unitType: new FormControl(\"\", [Validators.required, Validators.maxLength(20)]),\r\n        code: new FormControl(\"\", Validators.required),\r\n        colour: new FormControl(\"\"),\r\n        brand: new FormControl(\"\", Validators.maxLength(50)),\r\n        typeId: new FormControl(null, Validators.required)\r\n      });\r\n    } else if (this.typeForm === \"update\") {\r\n      let productId: number = Number.parseInt(this.activatedRoute.snapshot.queryParamMap.get(\"productId\"));\r\n      if (productId) {\r\n        this.title = \"Editar producto\";\r\n        LoadingComponent.isActive = true;\r\n        this.productService.findById(productId).subscribe(\r\n          response => {\r\n            this.colours = response.colours;\r\n            this.brands = response.brands;\r\n            this.formProduct = new FormGroup({\r\n              name: new FormControl(response.product.name, [Validators.required, Validators.maxLength(50)]),\r\n              description: new FormControl(response.product.description, [Validators.required, Validators.maxLength(200)]),\r\n              units: new FormControl(response.product.units, [Validators.required, Validators.max(999999999)]),\r\n              unitType: new FormControl(response.product.unitType, [Validators.required, Validators.maxLength(20)]),\r\n              code: new FormControl(response.product.code, Validators.required),\r\n              colour: new FormControl(\"\"),\r\n              brand: new FormControl(\"\", Validators.maxLength(50)),\r\n              typeId: new FormControl(response.productType.id, Validators.required)\r\n            });\r\n            LoadingComponent.isActive = false;\r\n          },\r\n          error => {\r\n            MessagesComponent.errorMessage(error);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private getTypes(): void {\r\n    LoadingComponent.isActive = true;\r\n    this.productService.getAllTypes().subscribe(\r\n      response => {\r\n        this.types = response;\r\n        LoadingComponent.isActive = false;\r\n      },\r\n      error => {\r\n        MessagesComponent.errorMessage(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  public create(): void {\r\n    LoadingComponent.isActive = true;\r\n    if(this.typeForm === \"create\") {\r\n      this.productService.create(new Product(this.formProduct.getRawValue(), this.colours, this.brands)).subscribe(\r\n        response => {\r\n          this.ngOnInit();\r\n          swal.fire(\"¡Producto guardado!\", \"\", \"success\");\r\n          this.router.navigate([\"/admin/products\"]);\r\n          LoadingComponent.isActive = false;\r\n        },\r\n        error => {\r\n          MessagesComponent.errorMessage(error);\r\n        }\r\n      );\r\n    } else if (this.typeForm === \"update\") {\r\n      LoadingComponent.isActive = false;\r\n    }\r\n  }\r\n\r\n  public deleteColour(colour: genericData): void {\r\n    for (let i: number = 0; i < this.colours.length; i++) {\r\n      if (this.colours[i].name === colour.name) {\r\n        this.colours.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  public addColour(): void {\r\n    if (this.formProduct.get(\"colour\").value != \"\") {\r\n      let result: genericData[] = this.colours.filter(b => b.name === this.formProduct.get(\"colour\").value);\r\n      if (result.length === 0) {\r\n        this.colours.push({ id: 1, name: this.formProduct.get(\"colour\").value });\r\n      } else {\r\n        swal.fire(\"¡Ya seleccionaste este color!\", \"\", \"info\");\r\n      }\r\n    }\r\n  }\r\n\r\n  public addBrand(): void {\r\n    if (this.formProduct.get(\"brand\").value != \"\") {\r\n      let result: genericData[] = this.brands.filter(b => b.name === this.formProduct.get(\"brand\").value);\r\n      if (result.length === 0) {\r\n        this.brands.push({ id: 1, name: this.formProduct.get(\"brand\").value });\r\n        this.formProduct.get(\"brand\").reset();\r\n      } else {\r\n        swal.fire(\"¡Esta marca ya esta agregada!\", \"\", \"info\");\r\n      }\r\n    }\r\n  }\r\n\r\n  public deleteBrand(brand: genericData): void {\r\n    for (let i: number = 0; i < this.brands.length; i++) {\r\n      if (this.brands[i].name === brand.name) {\r\n        this.brands.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <a routerLink=\"/admin/products\" class=\"btn btn-outline-success\"><i class=\"fa-solid fa-arrow-left\"></i> Regresar</a>\r\n  <div class=\"row align-items-center\">\r\n    <div class=\"col-12 col-md-6\">\r\n      <img src=\"assets/ilustrations/save.svg\" class=\"img-fluid\" alt=\"\">\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n      <div class=\"card card-body\">\r\n        <h3><i class=\"fa-solid fa-box\"></i> {{title}}</h3>\r\n        <form [formGroup]=\"formProduct\" *ngIf=\"formProduct\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <label for=\"image\">Seleccionar imagenes</label>\r\n            <input type=\"file\" class=\"form-control\" accept=\"image/*\" multiple id=\"image\">\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"code\">Codigo</label>\r\n            <input type=\"text\" formControlName=\"code\" [ngClass]=\"{'is-valid': formProduct.get('code').valid, 'is-invalid': formProduct.get('code').invalid}\" class=\"form-control\" placeholder=\"#\" id=\"code\">\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('code').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa un codigo!</p>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"name\">Nombre</label>\r\n            <input type=\"text\" formControlName=\"name\" [ngClass]=\"{'is-valid': formProduct.get('name').valid, 'is-invalid': formProduct.get('name').invalid}\" class=\"form-control\" placeholder=\"Nombre\" id=\"name\">\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('name').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa un nombre!</p>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('name').hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 50 caracteres!</p>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"type\">Tipo</label>\r\n            <select class=\"custom-select\" formControlName=\"typeId\" [ngClass]=\"{'is-valid': formProduct.get('typeId').valid, 'is-invalid': formProduct.get('typeId').invalid}\" id=\"type\">\r\n              <option value=\"null\" disabled selected>Tipos</option>\r\n              <option value=\"{{type.id}}\" *ngFor=\"let type of types\">{{type.name}}</option>\r\n            </select>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('typeId').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Selecciona un tipo!</p>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"description\">Descripción</label>\r\n            <textarea id=\"description\" [ngClass]=\"{'is-valid': formProduct.get('description').valid, 'is-invalid': formProduct.get('description').invalid}\" formControlName=\"description\" cols=\"5\" rows=\"3\" class=\"form-control\" placeholder=\"Descripción\"></textarea>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('description').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa una descripción!</p>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('description').hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 200 caracteres!</p>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"colour\">Color</label>\r\n            <div class=\"input-group\">\r\n              <input type=\"color\" class=\"form-control\" [ngClass]=\"{'is-valid': colours.length > 0, 'is-invalid': colours.length <= 0}\" formControlName=\"colour\" id=\"colour\">\r\n              <div class=\"input-group-append\">\r\n                <button type=\"button\" (click)=\"addColour()\" class=\"btn btn-outline-success\"><i class=\"fa-solid fa-floppy-disk\"></i></button>\r\n              </div>\r\n            </div>\r\n            <p class=\"text-danger\" *ngIf=\"colours.length <= 0\"><i class=\"fa-solid fa-circle-exclamation\"></i> Selecciona un color!</p>\r\n            <span class=\"badge mr-1\" style=\"background-color: {{colour.name}};\" *ngFor=\"let colour of colours\">{{colour.name}} <a (click)=\"deleteColour(colour)\" class=\"text-danger\"><i class=\"fa-solid fa-xmark\"></i></a></span>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"units\">Unidades</label>\r\n            <div class=\"input-group\">\r\n              <input type=\"number\" id=\"units\" [ngClass]=\"{'is-valid': formProduct.get('units').valid, 'is-invalid': formProduct.get('units').invalid}\" formControlName=\"units\" placeholder=\"Unidades\" class=\"form-control\">\r\n              <div class=\"input-group-append\">\r\n                <input type=\"text\" id=\"unitType\" [ngClass]=\"{'is-valid': formProduct.get('unitType').valid, 'is-invalid': formProduct.get('unitType').invalid}\" formControlName=\"unitType\" placeholder=\"Tipo de unidad\" class=\"form-control\">\r\n              </div>\r\n            </div>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('units').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa una unidad!</p>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('units').hasError('max')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 9 numeros!</p>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('unitType').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa un tipo de unidad!</p>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('unitType').hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 20 caracteres!</p>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"brands\">Marcas</label>\r\n            <div class=\"input-group\">\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"brand\" [ngClass]=\"{'is-valid': formProduct.get('brand').valid && brands.length > 0, 'is-invalid': formProduct.get('brand').invalid || brands.length <= 0}\" id=\"brands\" placeholder=\"Marcas\">\r\n              <div class=\"input-group-append\">\r\n                <button type=\"button\" [disabled]=\"formProduct.get('brand').invalid\" (click)=\"addBrand()\" class=\"btn btn-outline-success\"><i class=\"fa-solid fa-floppy-disk\"></i></button>\r\n              </div>\r\n            </div>\r\n            <p class=\"text-danger\" *ngIf=\"brands.length <= 0\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa una marca!</p>\r\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('brand').hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 50 caracteres!</p>\r\n            <span class=\"badge badge-primary mr-1\" *ngFor=\"let brand of brands\">{{brand.name}} <a (click)=\"deleteBrand(brand)\" class=\"text-danger\"><i class=\"fa-solid fa-xmark\"></i></a></span>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <button type=\"button\" (click)=\"create()\" [disabled]=\"formProduct.invalid || colours.length <= 0 || brands.length <= 0 || formProduct.pristine\" class=\"btn btn-outline-success mt-3\"><i class=\"fa-solid fa-floppy-disk\"></i> Guardar</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","interface genericData {\r\n    id: number,\r\n    name: string\r\n}\r\nexport class Product {\r\n\r\n    public images: number[];\r\n    public code: string;\r\n    public name: string;\r\n    public description: string;\r\n    public colours: genericData[];\r\n    public units: number;\r\n    public unitType: string;\r\n    public brands: genericData[];\r\n    public typeId: number;\r\n\r\n    constructor(productForm: any, colours: genericData[], brands: genericData[]) {\r\n        this.images = [1,2];\r\n        this.code = productForm.code;\r\n        this.name = productForm.name;\r\n        this.description = productForm.description;\r\n        this.colours = colours;\r\n        this.units = productForm.units;\r\n        this.unitType = productForm.unitType;\r\n        this.brands = brands;\r\n        this.typeId = productForm.typeId;\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}