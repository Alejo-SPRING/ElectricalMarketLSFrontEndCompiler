{"version":3,"sources":["./src/app/components/pages/admin/admin.module.ts","./src/app/components/pages/admin/types/types.component.ts","./src/app/components/pages/admin/types/types.component.html","./src/app/components/pages/admin/products/products.component.ts","./src/app/components/pages/admin/products/products.component.html","./src/app/components/pages/admin/form-product/form-product.component.ts","./src/app/components/pages/admin/form-product/form-product.component.html","./src/app/objects/product.ts"],"names":[],"mappings":"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","file":"components-pages-admin-admin-module.js","sourcesContent":["import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgModule, Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormProductComponent } from './form-product/form-product.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ProductsComponent } from './products/products.component';\nimport { TypesComponent } from './types/types.component';\n\nconst routes: Routes = [\n  {\n    path:\"formProduct/:type\", component: FormProductComponent\n  },\n  {\n    path:\"products\", component: ProductsComponent\n  },\n  {\n    path:\"types\", component: TypesComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    FormProductComponent,\n    ProductsComponent,\n    TypesComponent\n  ],\n  imports: [\n    CommonModule,\n    NgbModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule\n  ]\n})\nexport class AdminModule { }\n","import swal from 'sweetalert2';\nimport { LoadingComponent } from './../../../loading/loading.component';\nimport { MessagesComponent } from './../../../messages/messages.component';\nimport { Pageable } from './../../../../objects/pageable';\nimport { ProductService } from './../../../../services/product.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-types',\n  templateUrl: './types.component.html',\n  styleUrls: ['./types.component.css']\n})\nexport class TypesComponent implements OnInit {\n\n  public pageable: Pageable;\n  public titleFormType: string;\n  public nameType: FormControl;\n  public nameTypeUpdate: FormControl;\n  public types: any[];\n  private typeData: any;\n  private modalRef: NgbModalRef;\n\n  constructor(private ngbModal: NgbModal, private productService: ProductService) { }\n\n  ngOnInit(): void {\n    this.types = [];\n    this.nameType = new FormControl(\"\", Validators.maxLength(20));\n    this.pageable = new Pageable();\n    this.findTypes();\n  }\n\n  public save(): void {\n    LoadingComponent.isActive = true;\n    if(this.typeData) {\n      this.productService.updateType(this.nameTypeUpdate.value, this.typeData.id).subscribe(\n        response => {\n          this.ngOnInit();\n          this.modalRef.close();\n          swal.fire(\"¡Tipo actualizado!\", \"\", \"success\");\n          LoadingComponent.isActive = false;\n        },\n        error => {\n          MessagesComponent.errorMessage(error);\n        }\n      );\n    } else {\n      this.productService.createType(this.nameTypeUpdate.value).subscribe(\n        response => {\n          this.ngOnInit();\n          this.modalRef.close();\n          swal.fire(\"¡Tipo creado!\", \"\", \"success\");\n          LoadingComponent.isActive = false;\n        },\n        error => {\n          MessagesComponent.errorMessage(error);\n        }\n      );\n    }\n  }\n\n  public pageChange(page: number): void {\n    this.pageable.page = page;\n    this.findTypes();\n  }\n\n  public openFormType(content: any, typeData: any): void {\n    this.titleFormType = typeData ? \"Editar tipo\" : \"Crear tipo\";\n    this.typeData = typeData;\n    this.nameTypeUpdate = new FormControl(typeData ? typeData.name : \"\", [Validators.required, Validators.maxLength(20)]);\n    this.modalRef = this.ngbModal.open(content, {size: \"lg\"});\n  }\n\n  public findTypes(): void {\n    LoadingComponent.isActive = true;\n    this.productService.findTypes(this.nameType.value === \"\" ? \"all\" : this.nameType.value, this.pageable.page, this.pageable.size).subscribe(\n      response => {\n        if(this.nameType.value != \"\") {\n          this.pageable.page = 1;\n        }\n        this.pageable.uploadPageable(response);\n        this.types = response.content;\n        LoadingComponent.isActive = false;\n      },\n      error => {\n        MessagesComponent.errorMessage(error);\n      }\n    );\n  }\n\n}\n","<div class=\"container\">\n  <a routerLink=\"/admin/products\" class=\"btn btn-outline-success\"><i class=\"fa-solid fa-arrow-left\"></i> Regresar</a>\n  <div class=\"row mt-3\">\n    <div class=\"col-12\">\n      <div class=\"card card-body\">\n        <h3><i class=\"fa-solid fa-filter\"></i> Filtros</h3>\n        <div class=\"row mt-3\">\n          <div class=\"col-12 col-md-6\">\n            <div class=\"input-group\">\n              <input [formControl]=\"nameType\" [class.is-invalid]=\"nameType.invalid\"\n                [class.is-valid]=\"nameType.valid && nameType.value != ''\" type=\"search\" class=\"form-control\"\n                placeholder=\"Buscar por nombre\" />\n              <div class=\"input-group-append\">\n                <button type=\"button\" [disabled]=\"nameType.invalid\" (click)=\"findTypes()\"\n                  class=\"btn btn-outline-success\">\n                  <i class=\"fa-solid fa-magnifying-glass\"></i>\n                </button>\n              </div>\n            </div>\n            <a class=\"text-danger\" *ngIf=\"nameType.invalid\"><i class=\"fa-solid fa-circle-exclamation\"></i> ¡Ingresa\n              maximo 20 caracteres!</a>\n            <div class=\"w-100\"></div>\n            <a (click)=\"ngOnInit()\" *ngIf=\"nameType.value != ''\" class=\"text-danger\"><i class=\"fa-solid fa-trash\"></i>\n              Limpiar busqueda: {{nameType.value}}</a>\n            <div class=\"w-100\"></div>\n            <button type=\"button\" class=\"btn btn-outline-success mt-3\" (click)=\"openFormType(formTypeMD, null)\">\n              <i class=\"fa-solid fa-plus\"></i> Crear tipo\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"card card-body mt-3\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped table-hover\">\n            <thead>\n              <tr>\n                <th>Nombre</th>\n                <th>Opciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let type of types\">\n                <td>{{type.name}}</td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-outline-success rounded-circle\"\n                    (click)=\"openFormType(formTypeMD, type)\">\n                    <i class=\"fa-solid fa-pencil\"></i>\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <h3 class=\"text-muted text-center\" *ngIf=\"types.length == 0\">¡No se encontro ningun tipo!</h3>\n          <ngb-pagination *ngIf=\"types.length > 0\" (pageChange)=\"pageChange($event)\" [pageSize]=\"pageable.size\"\n            [collectionSize]=\"pageable.totalElements\" size=\"md\" class=\"d-flex justify-content-center mt-3\"\n            [(page)]=\"pageable.page\" aria-label=\"Default pagination\"></ngb-pagination>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #formTypeMD let-modal>\n  <div class=\"modal-body\">\n    <button type=\"button\" class=\"close\" (click)=\"modal.close()\">\n      <i class=\"fa-solid fa-circle-xmark text-danger\"></i>\n    </button>\n    <h3><i class=\"fa-solid fa-dolly\"></i> {{ titleFormType }}</h3>\n    <div class=\"row mt-4\">\n      <div class=\"col-12 col-md-6\">\n        <img src=\"assets/ilustrations/save.svg\" class=\"img-fluid\" alt=\"\">\n      </div>\n      <div class=\"col-12 col-md-6\">\n        <label for=\"name\">Nombre</label>\n        <input type=\"text\" id=\"name\" [formControl]=\"nameTypeUpdate\" class=\"form-control\" placeholder=\"Nombre\" [ngClass]=\"{\n            'is-valid': nameTypeUpdate.valid,\n            'is-invalid': nameTypeUpdate.invalid\n          }\">\n          <a class=\"text-danger\" *ngIf=\"nameTypeUpdate.hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> ¡Ingresa un nombre!</a>\n        <a class=\"text-danger\" *ngIf=\"nameTypeUpdate.hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> ¡Ingresa maximo\n          20 caracteres!</a>\n        <button type=\"button\" (click)=\"save()\" [disabled]=\"nameTypeUpdate.invalid || nameTypeUpdate.pristine\"\n          class=\"btn btn-outline-success btn-block mt-3\"><i class=\"fa-solid fa-floppy-disk\"></i> Guardar</button>\n      </div>\n    </div>\n  </div>\n</ng-template>","import { Pageable } from './../../../../objects/pageable';\nimport { LoadingComponent } from './../../../loading/loading.component';\nimport { MessagesComponent } from './../../../messages/messages.component';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ProductService } from './../../../../services/product.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  public pageable: Pageable;\n  public products: any[];\n  public name: FormControl;\n  public isCleanSearch: boolean;\n\n  constructor(private productService: ProductService) { }\n\n  ngOnInit(): void {\n    this.products = [];\n    this.isCleanSearch = false;\n    this.pageable = new Pageable();\n    this.name = new FormControl(\"\", Validators.maxLength(100));\n    this.findProduct(\"all\");\n  }\n\n  public pageChange(page: number): void {\n    this.pageable.page = page;\n    this.findProduct(\"all\");\n  }\n\n  public search(): void {\n    let name: string = this.name.value != \"\" ? this.name.value : \"all\";\n    this.isCleanSearch = this.name.value != \"\";\n    this.findProduct(name);\n  }\n\n  public findProduct(name: string): void {\n    LoadingComponent.isActive = true;\n    this.productService.find(name, this.pageable.page, this.pageable.size).subscribe(\n      response => {\n        if(name != \"all\") {\n          this.pageable.page = 1;\n        }\n        this.pageable.uploadPageable(response);\n        this.products = response.content;\n        LoadingComponent.isActive = false;\n      },\n      error => {\n        MessagesComponent.errorMessage(error);\n      }\n    );\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card card-body\">\n        <h3><i class=\"fa-solid fa-filter\"></i> Filtros</h3>\n        <div class=\"row mt-3\">\n          <div class=\"col-12 col-md-6\">\n            <div class=\"input-group\">\n              <input type=\"search\" [ngClass]=\"{'is-valid': name.valid, 'is-invalid': name.invalid}\" [formControl]=\"name\" class=\"form-control\" placeholder=\"Buscar por nombre o referencia\" />\n              <div class=\"input-group-append\">\n                <button type=\"button\" (click)=\"search()\" [disabled]=\"name.invalid\" class=\"btn btn-outline-success\">\n                  <i class=\"fa-solid fa-magnifying-glass\"></i>\n                </button>\n              </div>\n            </div>\n            <p class=\"text-danger\" *ngIf=\"name.hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 100 caracteres!</p>\n            <a (click)=\"ngOnInit()\" *ngIf=\"isCleanSearch\" class=\"text-danger\"><i class=\"fa-solid fa-trash\"></i> Limpiar busqueda: {{name.value}}</a>\n            <div class=\"w-100\"></div>\n            <div class=\"btn-group mt-3\">\n              <a routerLink=\"/admin/formProduct/create\" class=\"btn btn-outline-success\"><i class=\"fa-solid fa-plus\"></i>\n                Crear producto</a>\n              <a routerLink=\"/admin/types\" class=\"btn btn-outline-primary\"><i class=\"fa-solid fa-plus\"></i> Crear\n                tipo</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"card card-body mt-3\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped table-hover text-center\">\n            <thead>\n              <tr>\n                <th>No referencia</th>\n                <th>Nombre</th>\n                <th>Descripción</th>\n                <th>Cantidad</th>\n                <th>Opciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let product of products\">\n                <td>{{product.code}}</td>\n                <td>{{product.name}}</td>\n                <td>\n                  <textarea class=\"form-control\" [disabled]=\"true\" cols=\"1\" rows=\"2\">\n                    {{product.description}}</textarea>\n                </td>\n                <td>{{product.units + \" \" + product.unitType}}</td>\n                <td>\n                  <a [routerLink]=\"['/admin/formProduct/', 'update']\" [queryParams]=\"{productId: product.id}\" class=\"btn btn-outline-primary rounded-circle\"\n                    title=\"Editar producto\">\n                    <i class=\"fa-solid fa-pencil\"></i>\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <h3 class=\"text-muted text-center\" *ngIf=\"products.length <= 0\">¡No se encontro ningun producto!</h3>\n        </div>\n        <ngb-pagination *ngIf=\"products.length > 0\" [pageSize]=\"pageable.size\" (pageChange)=\"pageChange($event)\" [collectionSize]=\"pageable.totalElements\" size=\"md\" class=\"d-flex justify-content-center mt-3\" [(page)]=\"pageable.page\"\n          aria-label=\"Default pagination\"></ngb-pagination>\n      </div>\n    </div>\n  </div>\n</div>","import { ActivatedRoute, Router } from '@angular/router';\nimport { LoadingComponent } from './../../../loading/loading.component';\nimport { MessagesComponent } from './../../../messages/messages.component';\nimport { ProductService } from './../../../../services/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport swal from 'sweetalert2';\nimport { Product } from 'src/app/objects/product';\n\nenum GenericDataType {\n  COLOUR,\n  BRAND\n}\n\ninterface GenericData {\n  id: number,\n  name: string,\n  isCreate: boolean\n}\n\n@Component({\n  selector: 'app-form-product',\n  templateUrl: './form-product.component.html',\n  styleUrls: ['./form-product.component.css']\n})\nexport class FormProductComponent implements OnInit {\n\n  public title: string;\n  public formProduct: FormGroup;\n  public brands: GenericData[];\n  public colours: GenericData[];\n  public types: any[];\n  public typeForm: string;\n  private productId: number;\n\n  constructor(private productService: ProductService, private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.getTypes();\n    this.colours = [];\n    this.brands = [];\n    this.typeForm = this.activatedRoute.snapshot.paramMap.get(\"type\");\n    if (this.typeForm === \"create\") {\n      this.title = \"Crear producto\";\n      this.formProduct = new FormGroup({\n        name: new FormControl(\"\", [Validators.required, Validators.maxLength(50)]),\n        description: new FormControl(\"\", [Validators.required, Validators.maxLength(200)]),\n        units: new FormControl(null, [Validators.required, Validators.max(999999999)]),\n        unitType: new FormControl(\"\", [Validators.required, Validators.maxLength(20)]),\n        code: new FormControl(\"\", Validators.required),\n        colour: new FormControl(\"\"),\n        brand: new FormControl(\"\", Validators.maxLength(50)),\n        typeId: new FormControl(null, Validators.required)\n      });\n    } else if (this.typeForm === \"update\") {\n      let productId: number = Number.parseInt(this.activatedRoute.snapshot.queryParamMap.get(\"productId\"));\n      if (productId) {\n        this.title = \"Editar producto\";\n        LoadingComponent.isActive = true;\n        this.productService.findById(productId).subscribe(\n          response => {\n            this.productId = response.product.id;\n            for(let colour of response.colours) {\n              this.colours.push({id: colour.id, name: colour.name, isCreate: false});\n            }\n            for(let brand of response.brands) {\n              this.brands.push({id: brand.id, name: brand.name, isCreate: false});\n            }\n            this.formProduct = new FormGroup({\n              name: new FormControl(response.product.name, [Validators.required, Validators.maxLength(50)]),\n              description: new FormControl(response.product.description, [Validators.required, Validators.maxLength(200)]),\n              units: new FormControl(response.product.units, [Validators.required, Validators.max(999999999)]),\n              unitType: new FormControl(response.product.unitType, [Validators.required, Validators.maxLength(20)]),\n              code: new FormControl(response.product.code, Validators.required),\n              colour: new FormControl(\"\"),\n              brand: new FormControl(\"\", Validators.maxLength(50)),\n              typeId: new FormControl(response.productType.id, Validators.required)\n            });\n            LoadingComponent.isActive = false;\n          },\n          error => {\n            MessagesComponent.errorMessage(error);\n          }\n        );\n      }\n    }\n  }\n\n  private getTypes(): void {\n    LoadingComponent.isActive = true;\n    this.productService.getAllTypes().subscribe(\n      response => {\n        this.types = response;\n        LoadingComponent.isActive = false;\n      },\n      error => {\n        MessagesComponent.errorMessage(error);\n      }\n    );\n  }\n\n  public create(): void {\n    LoadingComponent.isActive = true;\n    if (this.typeForm === \"create\") {\n      this.productService.create(new Product(this.formProduct.getRawValue(), this.colours, this.brands)).subscribe(\n        response => {\n          this.ngOnInit();\n          swal.fire(\"¡Producto guardado!\", \"\", \"success\");\n          this.router.navigate([\"/admin/products\"]);\n          LoadingComponent.isActive = false;\n        },\n        error => {\n          MessagesComponent.errorMessage(error);\n        }\n      );\n    } else if (this.typeForm === \"update\" && this.productId) {\n      this.productService.update(new Product(this.formProduct.getRawValue(), this.colours, this.brands), this.productId). subscribe(\n        response => {\n          swal.fire(\"¡Producto actualizado!\", \"\", \"success\");\n          this.router.navigate([\"/admin/products\"]);\n          LoadingComponent.isActive = false;\n        },\n        error => {\n          MessagesComponent.errorMessage(error);\n        }\n      );\n    }\n  }\n\n  private deleteGenericData(genericData: GenericData, type: GenericDataType): void {\n    LoadingComponent.isActive = true;\n    this.productService.deleteGenericData(genericData.id).subscribe(response => {\n      swal.fire(\"¡Eliminado!\", \"\", \"success\");\n      if(type === GenericDataType.BRAND) {\n        for (let i: number = 0; i < this.brands.length; i++) {\n          if (this.brands[i].name === genericData.name) {\n            this.brands.splice(i, 1);\n          }\n        }\n      } else if (type === GenericDataType.COLOUR) {\n        for (let i: number = 0; i < this.colours.length; i++) {\n          if (this.colours[i].name === genericData.name) {\n            this.colours.splice(i, 1);\n          }\n        }\n      }\n      LoadingComponent.isActive = false;\n    },\n    error => {\n      MessagesComponent.errorMessage(error);\n    });\n  }\n\n  public deleteColour(colour: GenericData): void {\n    if(this.typeForm === \"update\" && colour.id != null) {\n      swal.fire({\n        title: \"¿Estas seguro de eliminar este color?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        showConfirmButton: true,\n        confirmButtonText: \"Si!\",\n        cancelButtonText: \"No!\"\n      }).then(\n        result => {\n          if(result.isConfirmed) {\n            this.deleteGenericData(colour, GenericDataType.COLOUR);\n          }\n        }\n      );\n    } else if (this.typeForm === \"create\" || colour.isCreate) {\n      for (let i: number = 0; i < this.colours.length; i++) {\n        if (this.colours[i].name === colour.name) {\n          this.colours.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  public addColour(): void {\n    if (this.formProduct.get(\"colour\").value != \"\") {\n      let result: GenericData[] = this.colours.filter(b => b.name === this.formProduct.get(\"colour\").value);\n      if (result.length === 0) {\n        this.colours.push({ id: null, name: this.formProduct.get(\"colour\").value, isCreate: true });\n        this.formProduct.get(\"colour\").setValue(null);\n      } else {\n        swal.fire(\"¡Ya seleccionaste este color!\", \"\", \"info\");\n      }\n    }\n  }\n\n  public addBrand(): void {\n    if (this.formProduct.get(\"brand\").value != \"\") {\n      let result: GenericData[] = this.brands.filter(b => b.name === this.formProduct.get(\"brand\").value);\n      if (result.length === 0) {\n        this.brands.push({ id: null, name: this.formProduct.get(\"brand\").value, isCreate: true });\n        this.formProduct.get(\"brand\").setValue(\"\");\n      } else {\n        swal.fire(\"¡Esta marca ya esta agregada!\", \"\", \"info\");\n      }\n    }\n  }\n\n  public deleteBrand(brand: GenericData): void {\n    if(this.typeForm === \"update\" && brand.id != null) {\n      swal.fire({\n        title: \"¿Estas seguro de eliminar esta marca?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        showConfirmButton: true,\n        confirmButtonText: \"Si!\",\n        cancelButtonText: \"No!\"\n      }).then(\n        result => {\n          if(result.isConfirmed) {\n            this.deleteGenericData(brand, GenericDataType.BRAND);\n          }\n        }\n      );\n    } else if (this.typeForm === \"create\" || brand.isCreate) {\n      for (let i: number = 0; i < this.brands.length; i++) {\n        if (this.brands[i].name === brand.name) {\n          this.brands.splice(i, 1);\n        }\n      }\n    }\n  }\n\n}\n","<div class=\"container\">\n  <a routerLink=\"/admin/products\" class=\"btn btn-outline-success\"><i class=\"fa-solid fa-arrow-left\"></i> Regresar</a>\n  <div class=\"row align-items-center\">\n    <div class=\"col-12 col-md-6\">\n      <img src=\"assets/ilustrations/save.svg\" class=\"img-fluid\" alt=\"\">\n    </div>\n    <div class=\"col-12 col-md-6\">\n      <div class=\"card card-body\">\n        <h3><i class=\"fa-solid fa-box\"></i> {{title}}</h3>\n        <form [formGroup]=\"formProduct\" *ngIf=\"formProduct\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <label for=\"image\">Seleccionar imagenes</label>\n            <input type=\"file\" class=\"form-control\" accept=\"image/*\" multiple id=\"image\">\n          </div>\n          <div class=\"col-12\">\n            <label for=\"code\">Codigo</label>\n            <input type=\"text\" formControlName=\"code\" [ngClass]=\"{'is-valid': formProduct.get('code').valid, 'is-invalid': formProduct.get('code').invalid}\" class=\"form-control\" placeholder=\"#\" id=\"code\">\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('code').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa un codigo!</p>\n          </div>\n          <div class=\"col-12\">\n            <label for=\"name\">Nombre</label>\n            <input type=\"text\" formControlName=\"name\" [ngClass]=\"{'is-valid': formProduct.get('name').valid, 'is-invalid': formProduct.get('name').invalid}\" class=\"form-control\" placeholder=\"Nombre\" id=\"name\">\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('name').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa un nombre!</p>\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('name').hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 50 caracteres!</p>\n          </div>\n          <div class=\"col-12\">\n            <label for=\"type\">Tipo</label>\n            <select class=\"custom-select\" formControlName=\"typeId\" [ngClass]=\"{'is-valid': formProduct.get('typeId').valid, 'is-invalid': formProduct.get('typeId').invalid}\" id=\"type\">\n              <option value=\"null\" disabled selected>Tipos</option>\n              <option value=\"{{type.id}}\" *ngFor=\"let type of types\">{{type.name}}</option>\n            </select>\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('typeId').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Selecciona un tipo!</p>\n          </div>\n          <div class=\"col-12\">\n            <label for=\"description\">Descripción</label>\n            <textarea id=\"description\" [ngClass]=\"{'is-valid': formProduct.get('description').valid, 'is-invalid': formProduct.get('description').invalid}\" formControlName=\"description\" cols=\"5\" rows=\"3\" class=\"form-control\" placeholder=\"Descripción\"></textarea>\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('description').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa una descripción!</p>\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('description').hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 200 caracteres!</p>\n          </div>\n          <div class=\"col-12\">\n            <label for=\"colour\">Color</label>\n            <div class=\"input-group\">\n              <input type=\"color\" class=\"form-control\" [ngClass]=\"{'is-valid': colours.length > 0, 'is-invalid': colours.length <= 0}\" formControlName=\"colour\" id=\"colour\">\n              <div class=\"input-group-append\">\n                <button type=\"button\" (click)=\"addColour()\" class=\"btn btn-outline-success\"><i class=\"fa-solid fa-floppy-disk\"></i></button>\n              </div>\n            </div>\n            <p class=\"text-danger\" *ngIf=\"colours.length <= 0\"><i class=\"fa-solid fa-circle-exclamation\"></i> Selecciona un color!</p>\n            <span class=\"badge mr-1\" style=\"background-color: {{colour.name}};\" *ngFor=\"let colour of colours\">{{colour.name}} <a (click)=\"deleteColour(colour)\" class=\"text-danger\"><i class=\"fa-solid fa-xmark\"></i></a></span>\n          </div>\n          <div class=\"col-12\">\n            <label for=\"units\">Unidades</label>\n            <div class=\"input-group\">\n              <input type=\"number\" id=\"units\" [ngClass]=\"{'is-valid': formProduct.get('units').valid, 'is-invalid': formProduct.get('units').invalid}\" formControlName=\"units\" placeholder=\"Unidades\" class=\"form-control\">\n              <div class=\"input-group-append\">\n                <input type=\"text\" id=\"unitType\" [ngClass]=\"{'is-valid': formProduct.get('unitType').valid, 'is-invalid': formProduct.get('unitType').invalid}\" formControlName=\"unitType\" placeholder=\"Tipo de unidad\" class=\"form-control\">\n              </div>\n            </div>\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('units').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa una unidad!</p>\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('units').hasError('max')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 9 numeros!</p>\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('unitType').hasError('required')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa un tipo de unidad!</p>\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('unitType').hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 20 caracteres!</p>\n          </div>\n          <div class=\"col-12\">\n            <label for=\"brands\">Marcas</label>\n            <div class=\"input-group\">\n              <input type=\"text\" class=\"form-control\" formControlName=\"brand\" [ngClass]=\"{'is-valid': formProduct.get('brand').valid && brands.length > 0, 'is-invalid': formProduct.get('brand').invalid || brands.length <= 0}\" id=\"brands\" placeholder=\"Marcas\">\n              <div class=\"input-group-append\">\n                <button type=\"button\" [disabled]=\"formProduct.get('brand').invalid\" (click)=\"addBrand()\" class=\"btn btn-outline-success\"><i class=\"fa-solid fa-floppy-disk\"></i></button>\n              </div>\n            </div>\n            <p class=\"text-danger\" *ngIf=\"brands.length <= 0\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa una marca!</p>\n            <p class=\"text-danger\" *ngIf=\"formProduct.get('brand').hasError('maxlength')\"><i class=\"fa-solid fa-circle-exclamation\"></i> Ingresa maximo 50 caracteres!</p>\n            <span class=\"badge badge-primary mr-1\" *ngFor=\"let brand of brands\">{{brand.name}} <a (click)=\"deleteBrand(brand)\" class=\"text-danger\"><i class=\"fa-solid fa-xmark\"></i></a></span>\n          </div>\n          <div class=\"col-12\">\n            <button type=\"button\" (click)=\"create()\" [disabled]=\"formProduct.invalid || colours.length <= 0 || brands.length <= 0 || formProduct.pristine\" class=\"btn btn-outline-success mt-3\"><i class=\"fa-solid fa-floppy-disk\"></i> Guardar</button>\n          </div>\n        </div>\n      </form>\n      </div>\n    </div>\n  </div>\n</div>\n","interface genericData {\n    id: number,\n    name: string\n}\nexport class Product {\n\n    public images: number[];\n    public code: string;\n    public name: string;\n    public description: string;\n    public colours: genericData[];\n    public units: number;\n    public unitType: string;\n    public brands: genericData[];\n    public typeId: number;\n\n    constructor(productForm: any, colours: genericData[], brands: genericData[]) {\n        this.images = [1,2];\n        this.code = productForm.code;\n        this.name = productForm.name;\n        this.description = productForm.description;\n        this.colours = colours;\n        this.units = productForm.units;\n        this.unitType = productForm.unitType;\n        this.brands = brands;\n        this.typeId = productForm.typeId;\n    }\n\n}\n"],"sourceRoot":"webpack:///"}